########################################################################################################################
# VARIABLES
########################################################################################################################
variables:
  BACKEND_PATH: dev/user-backend-nest
  FRONTEND_PATH: dev/user-frontend-ionic

stages:
  - packages


########################################################################################################################
# COMMON
########################################################################################################################
# Job permettant de récupérer la version de NodeJS à utiliser pour les images Docker du backend
check-nodejs-version:
  stage: .pre
  script:
    # on récupère la version de Node utilisée dans le backend via le fichier .nvmrc
    - >
      if [[ -z "$(cat ${BACKEND_PATH}/.nvmrc)" ]]; then
        echo "NODE_VERSION=lts" > vars.env # si le fichier .nvmrc est vide ou n'existe pas on utilise la version LTS de Node
      else
        echo "NODE_VERSION=$(cat ${BACKEND_PATH}/.nvmrc)" > vars.env
      fi
    - less vars.env
  artifacts:
    reports:
      dotenv: vars.env
  rules:
    # On ne déclenche ce job que lorsqu'il y a eu du changement au niveau du backend
    - if: '$CI_COMMIT_BRANCH == "develop-sied"'
      changes:
        - ${BACKEND_PATH}/main/**/*
        - ${BACKEND_PATH}/microservices/**/*
        - ${FRONTEND_PATH}/**/*

test:
  script:
    - echo “compile started”
